# remap prefix to Control + a
set -g prefix C-a
unbind C-b

# send C-a to program in tmux by pressing it twice
bind C-a send-prefix

# Reload the file with Prefix r
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# White foreground and black background on tmux status bar
set -g status-fg white
set -g status-bg black

# Active windows bright white, inactive windows cyan
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-attr bright

# Pane divider colors
set   -g pane-active-border-style     fg=colour63,bg=default
set   -g pane-border-style            fg=colour235,bg=default
setw  -g window-active-style          'bg=black' # bg color of active pane
setw  -g window-style                 'bg=#101010' # bg color of inactive pane(s)

# Command Line Colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status Bar Customizations
set -g status-utf8 on
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-justify centre
setw -g monitor-activity on
set -g visual-activity on

# Setting the delay between prefix and command
set -sg escape-time 1

# splitting panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# No mouse!
setw -g mouse off

# enable vi keys
setw -g mode-keys vi
